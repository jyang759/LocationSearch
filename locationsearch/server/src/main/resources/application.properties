spring.application.name=locationsearch

# Server port (optional, default is 8080)
server.port=8080

# H2 Database Configuration for Persistence
spring.datasource.url=jdbc:h2:file:./data/data
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enable H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA/Hibernate
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=your-google-client-id
spring.security.oauth2.client.registration.google.client-secret=your-google-client-secret
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Logging (optional, for better debugging)
logging.level.org.springframework.security=DEBUG
logging.level.com.cs3300.group8.locationsearch=DEBUG

# CORS Configuration (if your frontend is served from a different origin)
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Enable dispatch for OPTIONS requests
spring.mvc.dispatch-options-request=true